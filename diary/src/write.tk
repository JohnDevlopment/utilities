.nb add [ttk::frame .nb.frame1] -text Write -sticky news

settemp frame .nb.frame1

ttk::label $frame.date

exw text -wrap word -scrolly $frame.text TEXTBOX -state disabled -undo 1
bind $frame.text.text <<Modified>> {
    set EntryModified [%W edit modified]
}
ttk::combobox $frame.entries -textvariable SELECTED_ENTRY -state readonly
set SELECTED_ENTRY ""
$frame.entries state disabled
bind $frame.entries <<ComboboxSelected>> {
    settemp date [%W get]
    set CurrentEntry [clock scan $date -format $DateFormat]
    exw subcmd .nb.frame1.text clear
    exw subcmd .nb.frame1.text insert 1.0 [dict get $FileData $CurrentEntry]
    exw subcmd .nb.frame1.text edit modified 0
    exw subcmd .nb.frame1.text edit reset
}

ttk::frame $frame.buttons

settemp scripts [list \
{
    exw state .nb.frame1.text normal
    exw subcmd .nb.frame1.text clear
    exw subcmd .nb.frame1.text edit modified 0
    exw subcmd .nb.frame1.text edit reset

    set CurrentEntry [clock seconds]
} \
{
    # Save entry

    if {[exw subcmd .nb.frame1.text instate disabled]} {
        return [displayError "The text field is disabled."]
    }

    settemp text [exw subcmd .nb.frame1.text get 1.0 end]

    if {$text ne ""} {
        dict set FileData $CurrentEntry [string trimright $text]

        # Reset modified flag and reset undo stack
        exw subcmd .nb.frame1.text edit modified 0
        exw subcmd .nb.frame1.text edit reset

        # File modified
        set FileModified 1
        printStatusbar 0 "Entry Saved" 2000

        exw subcmd .nb.frame1.text instate
    } else {
        displayError "The text field is empty."
    }
} \
{
    # Delete entry

    if {$CurrentEntry eq ""} return

    settemp entry $CurrentEntry
    set CurrentEntry ""
    dict unset FileData $entry

    # File modified
    set FileModified 1
    printStatusbar 0 "Entry Deleted" 2000

    # Clear text; reset modified flag and reset undo stack
    exw subcmd .nb.frame1.text clear
    exw subcmd .nb.frame1.text edit modified 0
    exw subcmd .nb.frame1.text edit reset
}]
settemp w
settemp s
foreach w {new save delete} s $scripts {
    append s [subst {
        if {\[exw subcmd $frame.text instate normal]} {
            focus $frame.text.text
        } else {
            focus $frame
        }
    }]

    ttk::button $frame.buttons.$w -text [string totitle $w] -command $s -state disabled
}

# Paned window
ttk::panedwindow $frame.statusbar -orient horizontal
$frame.statusbar add [ttk::label $frame.statusbar.entryMod -relief sunken] \
    -weight 2
$frame.statusbar add [ttk::label $frame.statusbar.fileMod -relief sunken] \
    -weight 2
$frame.statusbar add [ttk::label $frame.statusbar.dir -relief sunken] \
    -weight 3
after idle {printStatusbar 2 [pwd]}

pack $frame.date $frame.entries -fill x -side top -anchor n
exw pack $frame.text -before $frame.entries -fill both -side top -anchor n

pack $frame.buttons -fill x -side top
    settemp children [winfo children $frame.buttons]
    pack {*}$children -side left -fill x -expand 1 -anchor n

pack $frame.statusbar -fill x -side top
